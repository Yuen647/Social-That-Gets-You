<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tongji.airrowing.club.biz.domain.mapper.ActivitySignupDOMapper">
  <resultMap id="BaseResultMap" type="com.tongji.airrowing.club.biz.domain.dataobject.ActivitySignupDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="activity_id" jdbcType="BIGINT" property="activityId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="signup_time" jdbcType="TIMESTAMP" property="signupTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, activity_id, user_id, signup_time, `status`, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_activity_signup
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_activity_signup
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.tongji.airrowing.club.biz.domain.dataobject.ActivitySignupDO">
    insert into t_activity_signup (id, activity_id, user_id, 
      signup_time, `status`, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{activityId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{signupTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tongji.airrowing.club.biz.domain.dataobject.ActivitySignupDO">
    insert into t_activity_signup
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="signupTime != null">
        signup_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="activityId != null">
        #{activityId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="signupTime != null">
        #{signupTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tongji.airrowing.club.biz.domain.dataobject.ActivitySignupDO">
    update t_activity_signup
    <set>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="signupTime != null">
        signup_time = #{signupTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tongji.airrowing.club.biz.domain.dataobject.ActivitySignupDO">
    update t_activity_signup
    set activity_id = #{activityId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      signup_time = #{signupTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByActivityIdAndUserId" parameterType="map" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" />
    FROM t_activity_signup
    WHERE activity_id = #{activityId} AND user_id = #{userId}
  </select>
  <select id="selectByClubIdAndUserId" parameterType="map" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" />
    FROM t_activity_signup
    WHERE activity_id IN (SELECT id FROM t_activity WHERE club_id = #{clubId})
    AND user_id = #{userId}
  </select>
  <select id="selectMembersByActivityId" parameterType="map" resultType="com.tongji.airrowing.club.biz.model.dto.ActivityMemberDTO">
    SELECT
      u.id AS userId,
      u.nickname AS username,
      u.avatar AS profilePicture,
      s.join_time AS signupTime
    FROM t_activity_member s
           JOIN t_user u ON s.user_id = u.id
    WHERE s.activity_id = #{activityId}
    ORDER BY s.join_time
      LIMIT #{offset}, #{limit}
  </select>

  <select id="selectSignupsByUserId" parameterType="map" resultType="com.tongji.airrowing.club.biz.model.dto.ActivitySignupInfoDTO">
    SELECT
      a.id AS activityId,
      a.title AS activityTitle,
      s.signup_time AS signupTime,
      s.status AS status
    FROM t_activity_signup s
           JOIN t_activity a ON s.activity_id = a.id
    WHERE s.user_id = #{userId}
    ORDER BY s.signup_time DESC
      LIMIT #{offset}, #{limit}
  </select>
  <select id="selectSignupsByActivityId" parameterType="map" resultType="com.tongji.airrowing.club.biz.model.dto.ActivitySignupDetailDTO">
    SELECT
    u.id AS userId,
    u.nickname AS username,
    u.avatar AS profilePicture,
    s.signup_time AS signupTime,
    s.status AS status
    FROM t_activity_signup s
    JOIN t_user u ON s.user_id = u.id
    WHERE s.activity_id = #{activityId}
    ORDER BY s.signup_time DESC
    LIMIT #{offset}, #{limit}
  </select>



</mapper>